{"version":3,"sources":["components/map.js","App.js","reportWebVitals.js","index.js"],"names":["Map","lat","long","React","useState","latitude","longitude","zoom","viewport","setViewport","width","height","mapStyle","mapboxApiAccessToken","onViewportChange","FullHeightDiv","styled","div","CenteredDiv","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA0BeA,EArBH,SAAC,GAAgB,IAAfC,EAAc,EAAdA,IAAIC,EAAU,EAAVA,KAAU,EACQC,IAAMC,SAAS,CAC7CC,SAAUJ,EACVK,UAAWJ,EACXK,KAAM,OAJgB,mBACjBC,EADiB,KACPC,EADO,KAOxB,OACE,cAAC,IAAD,2BACMD,GADN,IAEEE,MAAM,OACNC,OAAO,OACPC,SAAS,uDACTC,qBAAqB,gGACrBC,iBAAkB,SAACN,GAAD,OAAcC,EAAYD,Q,QCd9CO,EAAgBC,IAAOC,IAAV,2HAQbC,EAAcF,IAAOC,IAAV,iGAqBFE,MAdf,WACE,OACE,cAACJ,EAAD,UACE,cAACG,EAAD,UACE,cAAC,EAAD,CACAjB,IAAK,OACLC,MAAO,iBCdAkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0eb4f699.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport ReactMapGL from 'react-map-gl';\n\n\n// hooks allow us to create a map component as a function\nconst Map = ({lat,long}) => {\n    const [viewport, setViewport] = React.useState({\n      latitude: lat,\n      longitude: long,\n      zoom: 10.5\n    });\n  \n    return (\n      <ReactMapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle=\"mapbox://styles/abodu-andy/ckl05i8dy07o217o6b6js5dl2\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoiYWJvZHUtYW5keSIsImEiOiJja2p1cTk0Mm4xbnp4MnFudzhqbDlkc2EwIn0.MfjqGLbKhKJ2oF7WI7E6EA\"\n        onViewportChange={(viewport) => setViewport(viewport)}\n       \n      />\n    );\n}\n\n\nexport default Map;\n\n","\nimport Map from './components/map';\n\nimport styled from 'styled-components'\n\nconst FullHeightDiv = styled.div`\nheight: 100vh;\nwidth: 100vw;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n\nconst CenteredDiv = styled.div`\nwidth: 80vw;\nheight: 80vh;\nborder-radius: 5px;\noverflow: hidden;\n`\n\nfunction App() {\n  return (\n    <FullHeightDiv>\n      <CenteredDiv>\n        <Map \n        lat={34.025}\n        long={-118.40213}\n        />\n      </CenteredDiv>\n      \n    </FullHeightDiv>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}